"use strict";(self.webpackChunk_totalsoft_rocket_ui=self.webpackChunk_totalsoft_rocket_ui||[]).push([[808],{"./src/stories/surfaces/Accordion/Accordion.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AccordionList:function(){return AccordionList},CanExpandAll:function(){return CanExpandAll},Controlled:function(){return Controlled},Default:function(){return Default},Filled:function(){return Filled},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return Accordion_stories}});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),components=__webpack_require__("./src/components/index.ts"),mockedAccordionContent={title:"Basic Accordion Item",content:"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat.Aliquam eget maximus est, id dignissim quam"},Grid=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-3989720877/0/cache/@mui-material-npm-5.13.6-c4ce11faba-0c8936d8c1.zip/node_modules/@mui/material/Grid/Grid.js"),default_highlight=__webpack_require__("./.yarn/__virtual__/react-syntax-highlighter-virtual-bf5f9001e8/0/cache/react-syntax-highlighter-npm-15.5.0-da5363373b-c082b48f30.zip/node_modules/react-syntax-highlighter/dist/esm/default-highlight.js"),github=__webpack_require__("./.yarn/__virtual__/react-syntax-highlighter-virtual-bf5f9001e8/0/cache/react-syntax-highlighter-npm-15.5.0-da5363373b-c082b48f30.zip/node_modules/react-syntax-highlighter/dist/esm/styles/hljs/github.js"),jsx_runtime=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/jsx-runtime.js"),title=mockedAccordionContent.title,content=mockedAccordionContent.content,ControlledPreview=function ControlledPreview(){var _useState=(0,react.useState)(!1),expanded=_useState[0],setExpanded=_useState[1],handleToggle=(0,react.useCallback)((function(){return setExpanded((function(current){return!current}))}),[]);return(0,jsx_runtime.jsxs)(Grid.ZP,{container:!0,spacing:4,children:[(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:4,children:(0,jsx_runtime.jsx)(components.UQ,{title:title,content:content,expanded:expanded,onChange:handleToggle})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:4,children:(0,jsx_runtime.jsx)(default_highlight.Z,{language:"javascript",wrapLongLines:!0,style:github.Z,children:'\n  function ControlledAccordion({tabs}) {\n    const [expanded, setExpanded] = useState(false)\n\n    const handleToggle = useCallback(() => setExpanded(current => !current), [])\n\n    return(\n      <Accordion \n        title="Title"\n        content={--Text content here--}  \n        expanded={expanded} \n        onChange={handleToggle} \n      />\n    )\n  }\n'})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:4,children:(0,jsx_runtime.jsx)(default_highlight.Z,{language:"javascript",wrapLongLines:!0,style:github.Z,children:'\n  function UncontrolledAccordion({tabs}) {\n    return(\n      <Accordion\n        title="Title"\n        content={--Text content here--} \n      />\n    )\n  }\n'})})]})};ControlledPreview.displayName="ControlledPreview",ControlledPreview.__docgenInfo={description:"",methods:[],displayName:"ControlledPreview"};var _Default$parameters,_Default$parameters2,_Default$parameters3,_AccordionList$parame,_AccordionList$parame2,_AccordionList$parame3,_CanExpandAll$paramet,_CanExpandAll$paramet2,_CanExpandAll$paramet3,_Filled$parameters,_Filled$parameters2,_Filled$parameters3,_Controlled$parameter,_Controlled$parameter2,_Controlled$parameter3,Accordion_ControlledPreview=ControlledPreview,Accordion_stories={title:"Components/Surfaces/Accordion",component:components.UQ,tags:["autodocs"]},Default={args:Object.assign({},mockedAccordionContent)},AccordionList={args:{content:[{title:"Basic AccordionList Item1",content:"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat.Aliquam eget maximus est, id dignissim quam"},{title:"Basic AccordionList Item2",content:"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat.Aliquam eget maximus est, id dignissim quam"}]}},CanExpandAll={args:{canExpandAll:!0,content:[{title:"Basic AccordionList ExpandAll",content:"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat.Aliquam eget maximus est, id dignissim quam"},{title:"Basic AccordionList ExpandAll",content:"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat.Aliquam eget maximus est, id dignissim quam"}]}},Filled={args:{content:[{title:"Square and filled Accordion Item 1",content:"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat.Aliquam eget maximus est, id dignissim quam"},{title:"Square and filled Accordion Item 2",content:"Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat.Aliquam eget maximus est, id dignissim quam"}],summaryProps:{variant:"filled"}}},Controlled={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n        function ControlledAccordion({tabs}) {\n          const [expanded, setExpanded] = useState(false)\n        \n          const handleToggle = useCallback(() => setExpanded(current => !current), [])\n        \n          return(\n            <Accordion \n              title="Title"\n              content={--Text content here--}  \n              expanded={expanded} \n              onChange={handleToggle} \n            />\n          ) \n        }\n        ',format:!0}}},render:function render(){return(0,jsx_runtime.jsx)(Accordion_ControlledPreview,{})}};Default.parameters=Object.assign({},Default.parameters,{docs:Object.assign({},null==(_Default$parameters=Default.parameters)?void 0:_Default$parameters.docs,{source:Object.assign({originalSource:"{\n  args: {\n    ...mockedAccordionContent\n  }\n}"},null==(_Default$parameters2=Default.parameters)||null==(_Default$parameters2=_Default$parameters2.docs)?void 0:_Default$parameters2.source),description:Object.assign({story:"The default Accordion component."},null==(_Default$parameters3=Default.parameters)||null==(_Default$parameters3=_Default$parameters3.docs)?void 0:_Default$parameters3.description)})}),AccordionList.parameters=Object.assign({},AccordionList.parameters,{docs:Object.assign({},null==(_AccordionList$parame=AccordionList.parameters)?void 0:_AccordionList$parame.docs,{source:Object.assign({originalSource:"{\n  args: {\n    content: mockedAccordionContentList\n  }\n}"},null==(_AccordionList$parame2=AccordionList.parameters)||null==(_AccordionList$parame2=_AccordionList$parame2.docs)?void 0:_AccordionList$parame2.source),description:Object.assign({story:"To draw multiple Accordion components, just pass an array of elements to the `component` property.\n\nThe array elements must have the following structure:\n```\n{\n title?: string\n content?: React.ReactNode\n}[]\n```"},null==(_AccordionList$parame3=AccordionList.parameters)||null==(_AccordionList$parame3=_AccordionList$parame3.docs)?void 0:_AccordionList$parame3.description)})}),CanExpandAll.parameters=Object.assign({},CanExpandAll.parameters,{docs:Object.assign({},null==(_CanExpandAll$paramet=CanExpandAll.parameters)?void 0:_CanExpandAll$paramet.docs,{source:Object.assign({originalSource:"{\n  args: {\n    canExpandAll: true,\n    content: mockedAccordionContentListExpandAll\n  }\n}"},null==(_CanExpandAll$paramet2=CanExpandAll.parameters)||null==(_CanExpandAll$paramet2=_CanExpandAll$paramet2.docs)?void 0:_CanExpandAll$paramet2.source),description:Object.assign({story:"When drawing multiple Accordion components, by default it can only be expanded one accordion at a time.\n\nIf one if already opened and the user clicks to open another accordion, it first automatically closes the one that is open before opening the desired one.\n\nIf `canExpandAll: true` property is set, then all the Accordion components can pe opened at the same time."},null==(_CanExpandAll$paramet3=CanExpandAll.parameters)||null==(_CanExpandAll$paramet3=_CanExpandAll$paramet3.docs)?void 0:_CanExpandAll$paramet3.description)})}),Filled.parameters=Object.assign({},Filled.parameters,{docs:Object.assign({},null==(_Filled$parameters=Filled.parameters)?void 0:_Filled$parameters.docs,{source:Object.assign({originalSource:"{\n  args: {\n    content: mockedAccordionContentListSquare,\n    summaryProps: {\n      variant: 'filled'\n    }\n  }\n}"},null==(_Filled$parameters2=Filled.parameters)||null==(_Filled$parameters2=_Filled$parameters2.docs)?void 0:_Filled$parameters2.source),description:Object.assign({story:"Passing  `summaryProps: { variant: 'filled' }`, the Accordion header will be filled with a grayish color\nand with square margins."},null==(_Filled$parameters3=Filled.parameters)||null==(_Filled$parameters3=_Filled$parameters3.docs)?void 0:_Filled$parameters3.description)})}),Controlled.parameters=Object.assign({},Controlled.parameters,{docs:Object.assign({},null==(_Controlled$parameter=Controlled.parameters)?void 0:_Controlled$parameter.docs,{source:Object.assign({originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        function ControlledAccordion({tabs}) {\n          const [expanded, setExpanded] = useState(false)\n        \n          const handleToggle = useCallback(() => setExpanded(current => !current), [])\n        \n          return(\n            <Accordion \n              title="Title"\n              content={--Text content here--}  \n              expanded={expanded} \n              onChange={handleToggle} \n            />\n          ) \n        }\n        `,\n        format: true\n      }\n    }\n  },\n  render: () => <ControlledPreview />\n}'},null==(_Controlled$parameter2=Controlled.parameters)||null==(_Controlled$parameter2=_Controlled$parameter2.docs)?void 0:_Controlled$parameter2.source),description:Object.assign({story:"To handle the card toggle event manually use the `onChange` and `expanded` properties.\n- `onChange`: Callback fired on toggle.\n   - `@param { React.SyntheticEvent} event` : The event source of the callback\n   - `@param { boolean } expanded` : The expanded state boolean\n- `expanded`: Indicated if the Accordion is collapsed or expanded"},null==(_Controlled$parameter3=Controlled.parameters)||null==(_Controlled$parameter3=_Controlled$parameter3.docs)?void 0:_Controlled$parameter3.description)})});var __namedExportsOrder=["Default","AccordionList","CanExpandAll","Filled","Controlled"]}}]);