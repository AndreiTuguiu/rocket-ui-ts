"use strict";(self.webpackChunkrocket_ui=self.webpackChunkrocket_ui||[]).push([[318],{"./src/stories/navigation/NavPills/NavPills.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:function(){return Controlled},Default:function(){return Default},Filled:function(){return Filled},Orientation:function(){return Orientation},WithActions:function(){return WithActions},WithIcons:function(){return WithIcons},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return NavPills_stories}});__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js");var components=__webpack_require__("./src/components/index.ts"),Typography=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-02858a5f21/0/cache/@mui-material-npm-5.12.1-29375c604a-13fdb43e5d.zip/node_modules/@mui/material/Typography/Typography.js"),CarRepair=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-79b0da3c84/0/cache/@mui-icons-material-npm-5.11.16-d962649d08-db70426b6e.zip/node_modules/@mui/icons-material/CarRepair.js"),Phone=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-79b0da3c84/0/cache/@mui-icons-material-npm-5.11.16-d962649d08-db70426b6e.zip/node_modules/@mui/icons-material/Phone.js"),Rocket=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-79b0da3c84/0/cache/@mui-icons-material-npm-5.11.16-d962649d08-db70426b6e.zip/node_modules/@mui/icons-material/Rocket.js"),ShieldMoonSharp=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-79b0da3c84/0/cache/@mui-icons-material-npm-5.11.16-d962649d08-db70426b6e.zip/node_modules/@mui/icons-material/ShieldMoonSharp.js"),jsx_runtime=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/jsx-runtime.js"),tabs=function tabs(withIcons,withText){return[{label:withText&&"Item one",icon:withIcons?(0,jsx_runtime.jsx)(CarRepair.Z,{}):void 0,content:(0,jsx_runtime.jsx)(Typography.Z,{variant:"body2",children:"Content 1"})},{label:withText&&"Item two",icon:withIcons?(0,jsx_runtime.jsx)(Phone.Z,{}):void 0,content:(0,jsx_runtime.jsx)(Typography.Z,{variant:"body2",children:"Content 2"})},{label:withText&&"Item three",icon:withIcons?(0,jsx_runtime.jsx)(Rocket.Z,{}):void 0,content:(0,jsx_runtime.jsx)(Typography.Z,{variant:"body2",children:"Content 3"})},{label:withText&&"Item four",icon:withIcons?(0,jsx_runtime.jsx)(ShieldMoonSharp.Z,{}):void 0,content:(0,jsx_runtime.jsx)(Typography.Z,{variant:"body2",children:"Content 4"})}]},Grid=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-02858a5f21/0/cache/@mui-material-npm-5.12.1-29375c604a-13fdb43e5d.zip/node_modules/@mui/material/Grid/Grid.js"),WithIconsPreview=function WithIconsPreview(){return(0,jsx_runtime.jsxs)(Grid.ZP,{container:!0,columnSpacing:4,justifyContent:"center",direction:"column",children:[(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!0,!0)})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!0,!0),tabProps:{iconPosition:"bottom"}})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!0,!0),tabProps:{iconPosition:"start"}})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!0,!0),tabProps:{iconPosition:"end"}})})]})};WithIconsPreview.displayName="WithIconsPreview",WithIconsPreview.__docgenInfo={description:"",methods:[],displayName:"WithIconsPreview"};var NavPills_WithIconsPreview=WithIconsPreview,OrientationPreview=function OrientationPreview(){return(0,jsx_runtime.jsxs)(Grid.ZP,{container:!0,columnSpacing:4,justifyContent:"center",children:[(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!0,!0)})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!0,!0),orientation:"vertical"})})]})};OrientationPreview.displayName="OrientationPreview",OrientationPreview.__docgenInfo={description:"",methods:[],displayName:"OrientationPreview"};var NavPills_OrientationPreview=OrientationPreview,WithActionsPreview=function WithActionsPreview(){var actions=[(0,jsx_runtime.jsx)(components.hU,{type:"add",variant:"outlined",color:"secondary",size:"small"}),(0,jsx_runtime.jsx)(components.hU,{type:"delete",variant:"outlined",color:"error",size:"small"}),(0,jsx_runtime.jsx)(components.hU,{type:"download",variant:"outlined",color:"success",size:"small"})];return(0,jsx_runtime.jsx)(Grid.ZP,{container:!0,columnSpacing:4,children:(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!1,!0),actions:actions})})})};WithActionsPreview.displayName="WithActionsPreview",WithActionsPreview.__docgenInfo={description:"",methods:[],displayName:"WithActionsPreview"};var NavPills_WithActionsPreview=WithActionsPreview,default_highlight=__webpack_require__("./.yarn/__virtual__/react-syntax-highlighter-virtual-84f9a7457c/0/cache/react-syntax-highlighter-npm-15.5.0-da5363373b-c082b48f30.zip/node_modules/react-syntax-highlighter/dist/esm/default-highlight.js"),github=__webpack_require__("./.yarn/__virtual__/react-syntax-highlighter-virtual-84f9a7457c/0/cache/react-syntax-highlighter-npm-15.5.0-da5363373b-c082b48f30.zip/node_modules/react-syntax-highlighter/dist/esm/styles/hljs/github.js"),FilledPreview=function FilledPreview(){return(0,jsx_runtime.jsxs)(Grid.ZP,{container:!0,columnSpacing:4,justifyContent:"center",direction:"column",children:[(0,jsx_runtime.jsxs)(Grid.ZP,{item:!0,children:[(0,jsx_runtime.jsx)(default_highlight.Z,{language:"javascript",wrapLongLines:!0,style:github.Z,children:'<NavPills color="rose" .../>'}),(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!1,!0),color:"rose"})]}),(0,jsx_runtime.jsxs)(Grid.ZP,{item:!0,children:[(0,jsx_runtime.jsx)(default_highlight.Z,{language:"javascript",wrapLongLines:!0,style:github.Z,children:'<NavPills selectedColor="rose" indicatorColor="info" .../>'}),(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!1,!0),selectedColor:"rose",indicatorColor:"info"})]}),(0,jsx_runtime.jsxs)(Grid.ZP,{item:!0,children:[(0,jsx_runtime.jsx)(default_highlight.Z,{language:"javascript",wrapLongLines:!0,style:github.Z,children:'<NavPills colorGradient="warning" .../>'}),(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!1,!0),colorGradient:"warning"})]})]})};FilledPreview.displayName="FilledPreview",FilledPreview.__docgenInfo={description:"",methods:[],displayName:"FilledPreview"};var NavPills_FilledPreview=FilledPreview,ControlledPreview=function ControlledPreview(){return(0,jsx_runtime.jsxs)(Grid.ZP,{container:!0,spacing:4,children:[(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:4,children:(0,jsx_runtime.jsx)(components.M1,{tabs:tabs(!1,!0)})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:4,children:(0,jsx_runtime.jsx)(default_highlight.Z,{language:"javascript",wrapLongLines:!0,style:github.Z,children:"function ControlledNavPills({tabs}) {\n  const [active, setActive] = useState(0)\n\n  const handleChange = (event, newValue) => {\n    setActive(newValue)\n  }\n\n  return(\n    <NavPills\n      tabs={tabs}\n      active={active}\n      onChange={handleChange}\n    />\n  )\n"})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:4,children:(0,jsx_runtime.jsx)(default_highlight.Z,{language:"javascript",wrapLongLines:!0,style:github.Z,children:"function UncontrolledNavPills({tabs}) {\n  return(\n    <NavPills\n      tabs={tabs}\n    />\n  )\n"})})]})};ControlledPreview.displayName="ControlledPreview",ControlledPreview.__docgenInfo={description:"",methods:[],displayName:"ControlledPreview"};var _Default$parameters,_Default$parameters2,_Default$parameters2$,_Default$parameters3,_Default$parameters3$,_WithIcons$parameters,_WithIcons$parameters2,_WithIcons$parameters3,_WithIcons$parameters4,_WithIcons$parameters5,_Orientation$paramete,_Orientation$paramete2,_Orientation$paramete3,_Orientation$paramete4,_Orientation$paramete5,_WithActions$paramete,_WithActions$paramete2,_WithActions$paramete3,_WithActions$paramete4,_WithActions$paramete5,_Filled$parameters,_Filled$parameters2,_Filled$parameters2$d,_Filled$parameters3,_Filled$parameters3$d,_Controlled$parameter,_Controlled$parameter2,_Controlled$parameter3,_Controlled$parameter4,_Controlled$parameter5,NavPills_ControlledPreview=ControlledPreview,NavPills_stories={title:"Components/Navigation/NavPills",component:components.M1,tags:["autodocs"]},Default={args:{tabs:tabs(!1,!0),onChange:void 0},parameters:{docs:{source:{code:"\n        <NavPills\n          tabs={\n            [{\n              label: 'Item one',\n              content: 'Content 1'\n            },\n            {\n              label: 'Item two',\n              content: 'Content 2'\n            }]\n          }\n        />\n      ",format:!0}}}},WithIcons={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n        <NavPills\n          tabs={\n            [{\n              label: 'Item one',\n              icon: <CarRepair />,\n              content: 'Content 1'\n            },\n            {\n              label: 'Item two',\n              icon: <Phone />,\n              content: 'Content 2'\n            }]\n          }\n          tabProps={{ iconPosition: 'bottom' }}\n        />\n      ",format:!0}}},render:function render(){return(0,jsx_runtime.jsx)(NavPills_WithIconsPreview,{})}},Orientation={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n        <NavPills\n          tabs={\n            [{\n              label: 'Item one',\n              icon: <CarRepair />,\n              content: 'Content 1'\n            },\n            {\n              label: 'Item two',\n              icon: <Phone />,\n              content: 'Content 2'\n            }]\n          }\n          orientation='vertical'\n        />\n      ",format:!0}}},render:function render(){return(0,jsx_runtime.jsx)(NavPills_OrientationPreview,{})}},WithActions={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n          <NavPills\n            tabs={\n              [{\n                label: \'Item one\',\n                content: \'Content 1\'\n              },\n              {\n                label: \'Item two\',\n                content: \'Content 2\'\n              }]\n            }\n            actions={\n              [\n                <IconButton type="add" variant="outlined" color="secondary" size="small" />,\n                <IconButton type="delete" variant="outlined" color="error" size="small" />,\n                <IconButton type="download" variant="outlined" color="success" size="small" />\n              ]\n            }\n          />\n        )\n        ',format:!0}}},render:function render(){return(0,jsx_runtime.jsx)(NavPills_WithActionsPreview,{})}},Filled={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n        <NavPills\n          tabs={\n            [{\n              label: 'Item one',\n              icon: <CarRepair />,\n              content: 'Content 1'\n            },\n            {\n              label: 'Item two',\n              icon: <Phone />,\n              content: 'Content 2'\n            }]\n          }\n          indicatorColor={color-code-here}\n          selectedColor={color-code-here}\n        />\n        ",format:!0}}},render:function render(){return(0,jsx_runtime.jsx)(NavPills_FilledPreview,{})}},Controlled={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n        function ControlledNavPills({tabs}) {\n          const [active, setActive] = useState(0)\n        \n          const handleChange = (event, newValue) => {\n            setActive(newValue)\n          }\n        \n          return(\n            <NavPills\n              tabs={tabs}\n              active={active}\n              onChange={handleChange}\n            />\n          )\n        \n        ",format:!0}}},render:function render(){return(0,jsx_runtime.jsx)(NavPills_ControlledPreview,{})}};Default.parameters=Object.assign({},Default.parameters,{docs:Object.assign({},null==(_Default$parameters=Default.parameters)?void 0:_Default$parameters.docs,{source:Object.assign({originalSource:"{\n  args: {\n    tabs: tabs(false, true),\n    onChange: undefined\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n        <NavPills\n          tabs={\n            [{\n              label: 'Item one',\n              content: 'Content 1'\n            },\n            {\n              label: 'Item two',\n              content: 'Content 2'\n            }]\n          }\n        />\n      `,\n        format: true\n      }\n    }\n  }\n}"},null==(_Default$parameters2=Default.parameters)||null==(_Default$parameters2$=_Default$parameters2.docs)?void 0:_Default$parameters2$.source),description:Object.assign({story:"The Default NavPills component."},null==(_Default$parameters3=Default.parameters)||null==(_Default$parameters3$=_Default$parameters3.docs)?void 0:_Default$parameters3$.description)})}),WithIcons.parameters=Object.assign({},WithIcons.parameters,{docs:Object.assign({},null==(_WithIcons$parameters=WithIcons.parameters)?void 0:_WithIcons$parameters.docs,{source:Object.assign({originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <NavPills\n          tabs={\n            [{\n              label: 'Item one',\n              icon: <CarRepair />,\n              content: 'Content 1'\n            },\n            {\n              label: 'Item two',\n              icon: <Phone />,\n              content: 'Content 2'\n            }]\n          }\n          tabProps={{ iconPosition: 'bottom' }}\n        />\n      `,\n        format: true\n      }\n    }\n  },\n  render: () => <WithIconsPreview />\n}"},null==(_WithIcons$parameters2=WithIcons.parameters)||null==(_WithIcons$parameters3=_WithIcons$parameters2.docs)?void 0:_WithIcons$parameters3.source),description:Object.assign({story:"To include icons in your tabs, use the `icon`.\n\n Use the `iconPosition` property from `tabProps` object, to specify how the icon should aligned with the tab text value.\n The default values is `top`.\n\n Available options:\n- `top`: the icon is positioned on top of the text label\n- `bottom`: the icon is positioned under the text label\n- `start`: the icon is positioned in front of the text label\n- `end`: the icon is positioned after the text label"},null==(_WithIcons$parameters4=WithIcons.parameters)||null==(_WithIcons$parameters5=_WithIcons$parameters4.docs)?void 0:_WithIcons$parameters5.description)})}),Orientation.parameters=Object.assign({},Orientation.parameters,{docs:Object.assign({},null==(_Orientation$paramete=Orientation.parameters)?void 0:_Orientation$paramete.docs,{source:Object.assign({originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <NavPills\n          tabs={\n            [{\n              label: 'Item one',\n              icon: <CarRepair />,\n              content: 'Content 1'\n            },\n            {\n              label: 'Item two',\n              icon: <Phone />,\n              content: 'Content 2'\n            }]\n          }\n          orientation='vertical'\n        />\n      `,\n        format: true\n      }\n    }\n  },\n  render: () => <OrientationPreview />\n}"},null==(_Orientation$paramete2=Orientation.parameters)||null==(_Orientation$paramete3=_Orientation$paramete2.docs)?void 0:_Orientation$paramete3.source),description:Object.assign({story:'To make vertical tabs instead of default `horizontal` ones, there is `orientation="vertical"` option.'},null==(_Orientation$paramete4=Orientation.parameters)||null==(_Orientation$paramete5=_Orientation$paramete4.docs)?void 0:_Orientation$paramete5.description)})}),WithActions.parameters=Object.assign({},WithActions.parameters,{docs:Object.assign({},null==(_WithActions$paramete=WithActions.parameters)?void 0:_WithActions$paramete.docs,{source:Object.assign({originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n          <NavPills\n            tabs={\n              [{\n                label: \'Item one\',\n                content: \'Content 1\'\n              },\n              {\n                label: \'Item two\',\n                content: \'Content 2\'\n              }]\n            }\n            actions={\n              [\n                <IconButton type="add" variant="outlined" color="secondary" size="small" />,\n                <IconButton type="delete" variant="outlined" color="error" size="small" />,\n                <IconButton type="download" variant="outlined" color="success" size="small" />\n              ]\n            }\n          />\n        )\n        `,\n        format: true\n      }\n    }\n  },\n  render: () => <WithActionsPreview />\n}'},null==(_WithActions$paramete2=WithActions.parameters)||null==(_WithActions$paramete3=_WithActions$paramete2.docs)?void 0:_WithActions$paramete3.source),description:Object.assign({story:"Nav Pills component allows appending custom actions inside the component header\n\nUse the `actions` property to display anything you need."},null==(_WithActions$paramete4=WithActions.parameters)||null==(_WithActions$paramete5=_WithActions$paramete4.docs)?void 0:_WithActions$paramete5.description)})}),Filled.parameters=Object.assign({},Filled.parameters,{docs:Object.assign({},null==(_Filled$parameters=Filled.parameters)?void 0:_Filled$parameters.docs,{source:Object.assign({originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <NavPills\n          tabs={\n            [{\n              label: 'Item one',\n              icon: <CarRepair />,\n              content: 'Content 1'\n            },\n            {\n              label: 'Item two',\n              icon: <Phone />,\n              content: 'Content 2'\n            }]\n          }\n          indicatorColor={color-code-here}\n          selectedColor={color-code-here}\n        />\n        `,\n        format: true\n      }\n    }\n  },\n  render: () => <FilledPreview />\n}"},null==(_Filled$parameters2=Filled.parameters)||null==(_Filled$parameters2$d=_Filled$parameters2.docs)?void 0:_Filled$parameters2$d.source),description:Object.assign({story:"The Nav Pills component can be further more stylized by using `color`, `selectedColor`, `indicatorColor` and `colorGradient` properties.\n\n - `color`: Indicates the background color of the selected Tab and the indicator color. Precedes `indicatorColor` and `selectedColor` properties\n - `selectedColor`: Determines the color of the selected Tab.\n - `indicatorColor`: Determines the color of the indicator. The indicator is either the this line underneath the selected tab or it's background color.\n - `colorGradient`: applies a gradient color style on the selected tab. Precedes `color` property."},null==(_Filled$parameters3=Filled.parameters)||null==(_Filled$parameters3$d=_Filled$parameters3.docs)?void 0:_Filled$parameters3$d.description)})}),Controlled.parameters=Object.assign({},Controlled.parameters,{docs:Object.assign({},null==(_Controlled$parameter=Controlled.parameters)?void 0:_Controlled$parameter.docs,{source:Object.assign({originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        function ControlledNavPills({tabs}) {\n          const [active, setActive] = useState(0)\n        \n          const handleChange = (event, newValue) => {\n            setActive(newValue)\n          }\n        \n          return(\n            <NavPills\n              tabs={tabs}\n              active={active}\n              onChange={handleChange}\n            />\n          )\n        \n        `,\n        format: true\n      }\n    }\n  },\n  render: () => <ControlledPreview />\n}"},null==(_Controlled$parameter2=Controlled.parameters)||null==(_Controlled$parameter3=_Controlled$parameter2.docs)?void 0:_Controlled$parameter3.source),description:Object.assign({story:"To handle tab change event manually use the `onChange` and `active` properties.\n- `onChange`:\n   - `@param {object} event` : The event source of the callback\n   - `@param {number} value` : We default to the index of the child (number)\n- `active`: Index of the default active tab. Default is `0`"},null==(_Controlled$parameter4=Controlled.parameters)||null==(_Controlled$parameter5=_Controlled$parameter4.docs)?void 0:_Controlled$parameter5.description)})});var __namedExportsOrder=["Default","WithIcons","Orientation","WithActions","Filled","Controlled"]}}]);