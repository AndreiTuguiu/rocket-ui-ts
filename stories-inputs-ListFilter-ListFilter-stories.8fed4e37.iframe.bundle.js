"use strict";(self.webpackChunk_totalsoft_rocket_ui=self.webpackChunk_totalsoft_rocket_ui||[]).push([[961],{"./src/stories/inputs/ListFilter/ListFilter.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return ListFilter_stories}});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),components=__webpack_require__("./src/components/index.ts"),filtersWithChildren={orderByColumnName:"name",orderByDescending:!1,fullTextFilter:"",code:"",name:""},listData=[{name:"Cat",code:"FL_CAT"},{name:"Dog",code:"CN_DOG"},{name:"Turtle",code:"RP_TRT"},{name:"Tiger",code:"FL_TGR"},{name:"Wolf",code:"CN_WLF"}],userPreferencesList=[{fields:[{fieldName:"name",isVisible:!0,label:"Name"},{fieldName:"code",isVisible:!0,label:"Code"}],filterName:"pref 1",filters:[{defaultValue:"",fieldName:"name",isVisible:!0,label:"Name"},{defaultValue:"",fieldName:"code",isVisible:!0,label:"Code"}],implicit:!0,isDefault:!0,order:{orderByColumnName:"name",orderByColumns:null,orderByDescending:!1}},{fields:[{fieldName:"name",isVisible:!0,label:"Name"},{fieldName:"code",isVisible:!1,label:"Code"}],filterName:"pref 2",filters:[{defaultValue:"t",fieldName:"name",isVisible:!0,label:"Name"},{defaultValue:"",fieldName:"code",isVisible:!0,label:"Code"}],implicit:!1,isDefault:!1,order:{orderByColumnName:"code",orderByColumns:null,orderByDescending:!0}},{fields:[{fieldName:"name",isVisible:!0,label:"Name"},{fieldName:"code",isVisible:!0,label:"Code"}],filterName:"pref 3",filters:[{defaultValue:"",fieldName:"name",isVisible:!1,label:"Name"},{defaultValue:"CN",fieldName:"code",isVisible:!0,label:"Code"}],implicit:!1,isDefault:!1,order:{orderByColumnName:"code",orderByColumns:null,orderByDescending:!0}}],objectWithoutPropertiesLoose=__webpack_require__("./.yarn/cache/@babel-runtime-npm-7.22.6-493f6b7ad0-e585338287.zip/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"),objectWithoutPropertiesLoose_default=__webpack_require__.n(objectWithoutPropertiesLoose),Grid=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-3989720877/0/cache/@mui-material-npm-5.13.6-c4ce11faba-0c8936d8c1.zip/node_modules/@mui/material/Grid/Grid.js"),Divider=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-3989720877/0/cache/@mui-material-npm-5.13.6-c4ce11faba-0c8936d8c1.zip/node_modules/@mui/material/Divider/Divider.js"),Table=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-3989720877/0/cache/@mui-material-npm-5.13.6-c4ce11faba-0c8936d8c1.zip/node_modules/@mui/material/Table/Table.js"),TableHead=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-3989720877/0/cache/@mui-material-npm-5.13.6-c4ce11faba-0c8936d8c1.zip/node_modules/@mui/material/TableHead/TableHead.js"),TableRow=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-3989720877/0/cache/@mui-material-npm-5.13.6-c4ce11faba-0c8936d8c1.zip/node_modules/@mui/material/TableRow/TableRow.js"),TableCell=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-3989720877/0/cache/@mui-material-npm-5.13.6-c4ce11faba-0c8936d8c1.zip/node_modules/@mui/material/TableCell/TableCell.js"),TableBody=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-3989720877/0/cache/@mui-material-npm-5.13.6-c4ce11faba-0c8936d8c1.zip/node_modules/@mui/material/TableBody/TableBody.js"),ControlledCheckBox=__webpack_require__("./src/stories/inputs/Autocomplete/components/ControlledCheckBox.tsx"),es=__webpack_require__("./.yarn/cache/ramda-npm-0.29.0-ec4babb485-9ab26c06eb.zip/node_modules/ramda/es/index.js");function useFilteredList(filters){var _useState=(0,react.useState)(listData),localListData=_useState[0],setLocalListData=_useState[1];return(0,react.useEffect)((function(){var newListData=listData,fullTextFilter=(0,es.t$q)(null==filters?void 0:filters.fullTextFilter);newListData=(0,es.hXT)((function(_ref){var code=_ref.code,name=_ref.name;return(0,es.q9t)(fullTextFilter,(0,es.t$q)(code))||(0,es.q9t)(fullTextFilter,(0,es.t$q)(name))}),newListData);var codeFilter=(0,es.t$q)(null==filters?void 0:filters.code);newListData=(0,es.hXT)((function(_ref2){var code=_ref2.code;return(0,es.q9t)(codeFilter,(0,es.t$q)(code))}),newListData);var nameFilter=(0,es.t$q)(null==filters?void 0:filters.name);newListData=(0,es.hXT)((function(_ref3){var name=_ref3.name;return(0,es.q9t)(nameFilter,(0,es.t$q)(name))}),newListData),newListData=(0,es.DYV)((function(a,b){return a[filters.orderByColumnName]>b[filters.orderByColumnName]?filters.orderByDescending?-1:1:filters.orderByDescending?1:-1}),newListData),setLocalListData(newListData)}),[filters]),{listData:localListData}}var jsx_runtime=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/jsx-runtime.js"),_excluded=["filters","visibleFilters","visibleFields","userPreferences","selectedUserPreference","downloadButtonVisible","visibleUserPreferences"],ListFilterDefaultDecorator=function ListFilterDefaultDecorator(_ref){var _ref$args=_ref.args,filters=_ref$args.filters,visibleFilters=_ref$args.visibleFilters,visibleFields=_ref$args.visibleFields,userPreferences=_ref$args.userPreferences,selectedUserPreference=_ref$args.selectedUserPreference,downloadButtonVisible=_ref$args.downloadButtonVisible,visibleUserPreferences=_ref$args.visibleUserPreferences,args=objectWithoutPropertiesLoose_default()(_ref$args,_excluded),updateArgs=_ref.updateArgs,story=_ref.children,listData=useFilteredList(filters).listData,_useState=(0,react.useState)(!1),demoVisibleFields=_useState[0],setDemoVisibleFields=_useState[1],_useState2=(0,react.useState)(!1),demoVisibleFilters=_useState2[0],setDemoVisibleFilters=_useState2[1],handleFilterPropertyChange=(0,react.useCallback)((function(prop,value){var _Object$assign;updateArgs({filters:Object.assign({},filters,(_Object$assign={},_Object$assign[prop]=value,_Object$assign))})}),[filters,updateArgs]),handleVisibleFilterChange=(0,react.useCallback)((function(name){return function(event){var value=event.target.checked,newVisibleFilters=[].concat(visibleFilters);newVisibleFilters.find((function(x){return x.fieldName===name})).isVisible=value,updateArgs({visibleFilters:newVisibleFilters})}}),[visibleFilters,updateArgs]),filtersToShow=(0,react.useMemo)((function(){return visibleFilters.filter((function(x){return x.isVisible})).map((function(x){return x.fieldName}))}),[visibleFilters]),handleVisibleFieldsChange=(0,react.useCallback)((function(name){return function(event){var value=event.target.checked,newVisibleFields=[].concat(visibleFields);newVisibleFields.find((function(x){return x.fieldName===name})).isVisible=value,updateArgs({visibleFields:newVisibleFields})}}),[visibleFields,updateArgs]),fieldsToShow=(0,react.useMemo)((function(){return visibleFields.filter((function(x){return x.isVisible})).map((function(x){return x.fieldName}))}),[visibleFields]),onUserPreferenceChanged=(0,react.useCallback)((function(name){var newValue=userPreferences.filter((function(x){return x.filterName.toLowerCase()===name.toLowerCase()}))[0];updateArgs({selectedUserPreference:newValue});var defaultFilters=function getDefaultFilterValues(userPreference){var filters=Object.assign({},filtersWithChildren);userPreference.filters.forEach((function(el){filters[el.fieldName]=el.defaultValue}));var order=userPreference.order;return order&&(filters.orderByColumnName=order.orderByColumnName,filters.orderByDescending=order.orderByDescending),filters}(newValue);updateArgs({filters:defaultFilters,visibleFields:[].concat(newValue.fields),visibleFilters:[].concat(newValue.filters)})}),[userPreferences,updateArgs]),onAddUserPreference=(0,react.useCallback)((function(popUpUserPreference){if(popUpUserPreference.filterName){var newPreference=Object.assign({},popUpUserPreference,{isDefault:!1,implicit:!1,filterName:popUpUserPreference.filterName.trim()});if(!userPreferences.filter((function(x){return x.filterName.toLowerCase()===newPreference.filterName.toLowerCase()}))[0]){var newUserPreferences=[].concat(userPreferences,[newPreference]);updateArgs({userPreferences:newUserPreferences,selectedUserPreference:newPreference})}}}),[userPreferences,updateArgs]),onListDeleteChanged=(0,react.useCallback)((function(item){if(item.isDefault)alert("Can't delete default filter");else{var newUserPreferences=userPreferences.filter((function(p){return p.filterName.toLowerCase()!==item.filterName.toLowerCase()}));if(item.filterName.toLowerCase()===selectedUserPreference.filterName.toLowerCase()){var newPreference=Object.assign({},selectedUserPreference,{isDefault:!1,filterName:"",implicit:!1});updateArgs({selectedUserPreference:newPreference})}updateArgs({userPreferences:newUserPreferences})}}),[selectedUserPreference,userPreferences,updateArgs]),onListImplicitChanged=(0,react.useCallback)((function(item){var newPreference,newUserPreferences=userPreferences.map((function(x){return x.filterName.toLowerCase()===item.filterName.toLowerCase()?Object.assign({},x,{implicit:!item.implicit}):Object.assign({},x,{implicit:!1})}));if(selectedUserPreference.filterName.toLowerCase()===item.filterName.toLowerCase())newPreference=Object.assign({},selectedUserPreference,{implicit:!selectedUserPreference.implicit});else{var newImplicitPreference=newUserPreferences.filter((function(p){return!0===p.implicit}));newPreference=newImplicitPreference&&newImplicitPreference.length>0?newImplicitPreference[0]:Object.assign({},selectedUserPreference,{implicit:!1})}updateArgs({userPreferences:newUserPreferences,selectedUserPreference:newPreference})}),[selectedUserPreference,userPreferences,updateArgs]),onDownloadVisibleChanged=(0,react.useCallback)((function(){return updateArgs({downloadButtonVisible:!downloadButtonVisible})}),[downloadButtonVisible,updateArgs]),onDemoVisibleFiltersChanged=(0,react.useCallback)((function(){return setDemoVisibleFilters(!demoVisibleFilters)}),[demoVisibleFilters]),onDemoVisibleFieldsChanged=(0,react.useCallback)((function(){return setDemoVisibleFields(!demoVisibleFields)}),[demoVisibleFields]),onVisibleUserPreferencesChanged=(0,react.useCallback)((function(){return updateArgs({visibleUserPreferences:!visibleUserPreferences})}),[visibleUserPreferences,updateArgs]);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(Grid.ZP,{container:!0,justifyContent:"center",spacing:2,children:[(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(ControlledCheckBox.Z,{value:downloadButtonVisible,onChange:onDownloadVisibleChanged,label:"Download Button"})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(ControlledCheckBox.Z,{value:demoVisibleFilters,onChange:onDemoVisibleFiltersChanged,label:"Visible Filters"})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(ControlledCheckBox.Z,{value:demoVisibleFields,onChange:onDemoVisibleFieldsChanged,label:"Visible Fields"})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(ControlledCheckBox.Z,{value:visibleUserPreferences,onChange:onVisibleUserPreferencesChanged,label:"User Preferences"})})]}),(0,jsx_runtime.jsx)(Divider.Z,{}),react.cloneElement(story,{args:Object.assign({},args,{filters:filters,userPreferences:userPreferences,selectedUserPreference:selectedUserPreference,children:(0,jsx_runtime.jsxs)(Grid.ZP,{container:!0,spacing:2,children:[filtersToShow.includes("name")&&(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:6,children:(0,jsx_runtime.jsx)(components.nv,{label:"Name",value:filters.name,onChange:function onChange(event){return handleFilterPropertyChange("name",event)},fullWidth:!0})}),filtersToShow.includes("code")&&(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:6,children:(0,jsx_runtime.jsx)(components.nv,{label:"Code",value:filters.code,onChange:function onChange(event){return handleFilterPropertyChange("code",event)},fullWidth:!0})})]}),onChangeFilterValue:handleFilterPropertyChange,downloadButtonVisible:downloadButtonVisible,handleVisibleFilterChange:handleVisibleFilterChange,handleVisibleFieldsChange:handleVisibleFieldsChange,visibleFields:demoVisibleFields?visibleFields:void 0,visibleFilters:demoVisibleFilters?visibleFilters:void 0,visibleUserPreferences:visibleUserPreferences,onUserPreferenceChanged:onUserPreferenceChanged,onAddUserPreference:onAddUserPreference,onListDeleteChanged:onListDeleteChanged,onListImplicitChanged:onListImplicitChanged})}),(0,jsx_runtime.jsxs)(Table.Z,{children:[(0,jsx_runtime.jsx)(TableHead.Z,{children:(0,jsx_runtime.jsxs)(TableRow.Z,{children:[fieldsToShow.includes("name")&&(0,jsx_runtime.jsx)(TableCell.Z,{children:"Name"}),fieldsToShow.includes("code")&&(0,jsx_runtime.jsx)(TableCell.Z,{children:"Code"})]})}),(0,jsx_runtime.jsx)(TableBody.Z,{children:listData.map((function(item){return(0,jsx_runtime.jsxs)(TableRow.Z,{children:[fieldsToShow.includes("name")&&(0,jsx_runtime.jsx)(TableCell.Z,{children:item.name}),fieldsToShow.includes("code")&&(0,jsx_runtime.jsx)(TableCell.Z,{children:item.code})]},item.code)}))})]})]})};ListFilterDefaultDecorator.__docgenInfo={description:"",methods:[],displayName:"ListFilterDefaultDecorator"};var _Default$parameters,_Default$parameters2,_Default$parameters3,ListFilter_ListFilterDefaultDecorator=ListFilterDefaultDecorator,external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),ListFilter_stories={title:"Components/Inputs/ListFilter",component:components.p,tags:["autodocs"],argTypes:{selectedUserPreference:{control:"object",table:{type:{summary:"object",detail:null}}},onUserPreferenceChanged:{control:{type:"function"},table:{type:{summary:"func",detail:null}}},onListImplicitChanged:{control:{type:"function"},table:{type:{summary:"func",detail:null}}},onListDeleteChanged:{control:{type:"function"},table:{type:{summary:"func",detail:null}}},onAddUserPreference:{control:{type:"function"},table:{type:{summary:"func",detail:null}}},userPreferences:{control:{type:"array"},table:{type:{summary:"array",detail:null}}}}},Default={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n        <ListFilter\n        filters={filters}\n        sortableColumns={sortableColumns}\n        localizedStrings={localizedStrings}\n        onChangeFilterValue={handleFilterPropertyChange}\n        handleVisibleFilterChange={handleVisibleFilterChange}\n        handleVisibleFieldsChange={handleVisibleFieldsChange}\n        visibleFields={localVisibleFields}\n        visibleFilters={localVisibleFilters}\n        visibleUserPreferences={true}\n        userPreferences={localUserPreferences}\n        selectedUserPreference={selectedUserPreference}\n        onUserPreferenceChanged={onUserPreferenceChanged}\n        onAddUserPreference={onAddUserPreference}\n        onListDeleteChanged={onListDeleteChanged}\n        onListImplicitChanged={onListImplicitChanged}\n        downloadEnabled\n        downloadButtonVisible={true}\n        onDownload={onDownload}\n        >\n          {children}\n        </ListFilter>\n        ",format:!0}}},decorators:[function(Story){var _useArgs=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useArgs)(),args=_useArgs[0],updateArgs=_useArgs[1];return(0,jsx_runtime.jsx)(ListFilter_ListFilterDefaultDecorator,{args:args,updateArgs:updateArgs,children:(0,jsx_runtime.jsx)(Story,{})})}],args:{filters:filtersWithChildren,sortableColumns:[{columnName:"name",displayName:"Name"},{columnName:"code",displayName:"Code"}],localizedStrings:{OrderAscending:"Ascending",OrderDescending:"Descending",FilterName:"Filter name",Implicit:"Implicit",UserPreference:"User preference",UserPreferences:"User preferences",DeleteUserPreference:"Do you want to delete the preference?",Search:"Search",ResetFilters:"Reset filter values",ShowFilters:"Show filters",ChooseFilters:"Choose filters",OrderBy:"Order by",InOrder:"In order",EditUserPreferences:"Edit user preferences",Download:"Download",ChooseFields:"Choose fields to be displayed",Delete:"Delete",Add:"Add",Close:"Close"},downloadEnabled:!1,downloadButtonVisible:!0,visibleUserPreferences:!1,onDownload:function onDownload(){},visibleFields:[{fieldName:"name",isVisible:!0,label:"Name"},{fieldName:"code",isVisible:!0,label:"Code"}],visibleFilters:[{defaultValue:null,fieldName:"name",isVisible:!0,label:"Name"},{defaultValue:null,fieldName:"code",isVisible:!0,label:"Code"}],userPreferences:userPreferencesList,selectedUserPreference:userPreferencesList[0]}};Default.parameters=Object.assign({},Default.parameters,{docs:Object.assign({},null==(_Default$parameters=Default.parameters)?void 0:_Default$parameters.docs,{source:Object.assign({originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <ListFilter\n        filters={filters}\n        sortableColumns={sortableColumns}\n        localizedStrings={localizedStrings}\n        onChangeFilterValue={handleFilterPropertyChange}\n        handleVisibleFilterChange={handleVisibleFilterChange}\n        handleVisibleFieldsChange={handleVisibleFieldsChange}\n        visibleFields={localVisibleFields}\n        visibleFilters={localVisibleFilters}\n        visibleUserPreferences={true}\n        userPreferences={localUserPreferences}\n        selectedUserPreference={selectedUserPreference}\n        onUserPreferenceChanged={onUserPreferenceChanged}\n        onAddUserPreference={onAddUserPreference}\n        onListDeleteChanged={onListDeleteChanged}\n        onListImplicitChanged={onListImplicitChanged}\n        downloadEnabled\n        downloadButtonVisible={true}\n        onDownload={onDownload}\n        >\n          {children}\n        </ListFilter>\n        `,\n        format: true\n      }\n    }\n  },\n  decorators: [Story => {\n    const [args, updateArgs] = useArgs();\n    return <ListFilterDefaultDecorator args={args} updateArgs={updateArgs}>\n        <Story />\n      </ListFilterDefaultDecorator>;\n  }],\n  args: {\n    filters: filtersWithChildren,\n    sortableColumns: sortableColumns,\n    localizedStrings: localizedStrings,\n    downloadEnabled: false,\n    downloadButtonVisible: true,\n    visibleUserPreferences: false,\n    onDownload: () => {},\n    visibleFields: visibleFields,\n    visibleFilters: visibleFilters,\n    userPreferences: userPreferencesList,\n    selectedUserPreference: userPreferencesList[0]\n  }\n}"},null==(_Default$parameters2=Default.parameters)||null==(_Default$parameters2=_Default$parameters2.docs)?void 0:_Default$parameters2.source),description:Object.assign({story:"An example that allows enabling/disabling the optional ListFilter features. The user preferences feature applies to the visible filters and fields as well"},null==(_Default$parameters3=Default.parameters)||null==(_Default$parameters3=_Default$parameters3.docs)?void 0:_Default$parameters3.description)})});var __namedExportsOrder=["Default"]},"./src/stories/inputs/Autocomplete/components/ControlledCheckBox.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./.yarn/cache/prop-types-npm-15.8.1-17c71ee7ee-c056d3f1c0.zip/node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__),_mui_material_FormControlLabel__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-3989720877/0/cache/@mui-material-npm-5.13.6-c4ce11faba-0c8936d8c1.zip/node_modules/@mui/material/FormControlLabel/FormControlLabel.js"),_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-3989720877/0/cache/@mui-material-npm-5.13.6-c4ce11faba-0c8936d8c1.zip/node_modules/@mui/material/Checkbox/Checkbox.js"),components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/jsx-runtime.js"),ControlledCheckbox=function ControlledCheckbox(_ref){var value=_ref.value,onChange=_ref.onChange,label=_ref.label,handleChange=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((function(e){return onChange(e.target.checked)}),[onChange]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_mui_material_FormControlLabel__WEBPACK_IMPORTED_MODULE_3__.Z,{control:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_4__.Z,{color:"primary",size:"small",checked:value||!1,onChange:handleChange}),disableTypography:!0,label:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(components__WEBPACK_IMPORTED_MODULE_1__.ZT,{color:"textSecondary",variant:"caption",children:label})})};ControlledCheckbox.displayName="ControlledCheckbox",ControlledCheckbox.propTypes={value:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,onChange:prop_types__WEBPACK_IMPORTED_MODULE_5___default().func,label:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string.isRequired},ControlledCheckbox.__docgenInfo={description:"",methods:[],displayName:"ControlledCheckbox",props:{value:{required:!1,tsType:{name:"boolean"},description:"",type:{name:"bool"}},onChange:{required:!1,tsType:{name:"any"},description:"",type:{name:"func"}},label:{required:!0,tsType:{name:"string"},description:"",type:{name:"string"}}}},__webpack_exports__.Z=ControlledCheckbox}}]);