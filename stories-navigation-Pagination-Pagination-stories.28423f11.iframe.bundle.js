"use strict";(self.webpackChunk_totalsoft_rocket_ui=self.webpackChunk_totalsoft_rocket_ui||[]).push([[933],{"./src/stories/navigation/Pagination/Pagination.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},WithFirstAndLastOptions:function(){return WithFirstAndLastOptions},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return Pagination_stories}});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),Pagination=__webpack_require__("./src/components/navigation/Pagination/index.ts"),components=__webpack_require__("./src/components/index.ts"),jsx_runtime=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/jsx-runtime.js"),WithFirstAndLastPreview=function WithFirstAndLastPreview(){var _useState=(0,react.useState)(0),page=_useState[0],setPage=_useState[1],_useState2=(0,react.useState)(10),pageSize=_useState2[0],setPageSize=_useState2[1],handleChangePage=(0,react.useCallback)((function(value){setPage(value)}),[]),handleChangeRowsPerPage=(0,react.useCallback)((function(value){setPageSize(value),setPage(0)}),[]);return(0,jsx_runtime.jsx)(components.tl,{count:100,page:page,onPageChange:handleChangePage,pageSize:pageSize,onRowsPerPageChange:handleChangeRowsPerPage,showFirstButton:!0,showLastButton:!0})};WithFirstAndLastPreview.displayName="WithFirstAndLastPreview",WithFirstAndLastPreview.__docgenInfo={description:"",methods:[],displayName:"WithFirstAndLastPreview"};var Pagination_WithFirstAndLastPreview=WithFirstAndLastPreview,DefaultPreview=function DefaultPreview(args){var _useState=(0,react.useState)(0),page=_useState[0],setPage=_useState[1],_useState2=(0,react.useState)(10),pageSize=_useState2[0],setPageSize=_useState2[1],handleChangePage=(0,react.useCallback)((function(value){setPage(value)}),[]),handleChangeRowsPerPage=(0,react.useCallback)((function(value){setPageSize(value),setPage(0)}),[]);return(0,jsx_runtime.jsx)(components.tl,Object.assign({},args,{page:page,onPageChange:handleChangePage,pageSize:pageSize,onRowsPerPageChange:handleChangeRowsPerPage}))};DefaultPreview.displayName="DefaultPreview",DefaultPreview.__docgenInfo={description:"",methods:[],displayName:"DefaultPreview"};var _Default$parameters,_Default$parameters2,_Default$parameters2$,_Default$parameters3,_Default$parameters3$,_WithFirstAndLastOpti,_WithFirstAndLastOpti2,_WithFirstAndLastOpti3,_WithFirstAndLastOpti4,_WithFirstAndLastOpti5,Pagination_DefaultPreview=DefaultPreview,Pagination_stories={title:"Components/Navigation/Pagination",component:Pagination.Z,tags:["autodocs"]},Default={args:{count:100},parameters:{docs:{source:{code:"\n        const [page, setPage] = useState(0)\n        const [pageSize, setPageSize] = useState(17)\n\n        const handleChangePage = useCallback((value) => {\n          setPage(value)\n        }, [])\n\n        const handleChangeRowsPerPage = useCallback((value) => {\n          setPageSize(value)\n          setPage(0)\n        }, [])\n\n        return (\n          <Pagination\n            count={100}\n            page={page}\n            onPageChange={handleChangePage}\n            pageSize={pageSize}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        )\n        ",format:!0}}},render:function render(args){return(0,jsx_runtime.jsx)(Pagination_DefaultPreview,Object.assign({},args))}},WithFirstAndLastOptions={args:{count:100,showFirstButton:!0,showLastButton:!0,onPageChange:void 0,onRowsPerPageChange:void 0},parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n        const [page, setPage] = useState(0)\n        const [pageSize, setPageSize] = useState(17)\n\n        const handleChangePage = useCallback((value) => {\n          setPage(value)\n        }, [])\n\n        const handleChangeRowsPerPage = useCallback((value) => {\n          setPageSize(value)\n          setPage(0)\n        }, [])\n\n        return (\n          <Pagination\n            count={100}\n            page={page}\n            onPageChange={handleChangePage}\n            pageSize={pageSize}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            showFirstButton={true}\n            showLastButton={true}\n          />\n        )\n        ",format:!0}}},render:function render(){return(0,jsx_runtime.jsx)(Pagination_WithFirstAndLastPreview,{})}};Default.parameters=Object.assign({},Default.parameters,{docs:Object.assign({},null==(_Default$parameters=Default.parameters)?void 0:_Default$parameters.docs,{source:Object.assign({originalSource:"{\n  args: {\n    count: 100\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n        const [page, setPage] = useState(0)\n        const [pageSize, setPageSize] = useState(17)\n\n        const handleChangePage = useCallback((value) => {\n          setPage(value)\n        }, [])\n\n        const handleChangeRowsPerPage = useCallback((value) => {\n          setPageSize(value)\n          setPage(0)\n        }, [])\n\n        return (\n          <Pagination\n            count={100}\n            page={page}\n            onPageChange={handleChangePage}\n            pageSize={pageSize}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        )\n        `,\n        format: true\n      }\n    }\n  },\n  render: args => <DefaultPreview {...args} />\n}"},null==(_Default$parameters2=Default.parameters)||null==(_Default$parameters2$=_Default$parameters2.docs)?void 0:_Default$parameters2$.source),description:Object.assign({story:"This is the default Pagination component. It enables the user to select a specific page from a range of pages,\nrefreshes the entries using the refresh button and allows choosing a number of displayed elements per page."},null==(_Default$parameters3=Default.parameters)||null==(_Default$parameters3$=_Default$parameters3.docs)?void 0:_Default$parameters3$.description)})}),WithFirstAndLastOptions.parameters=Object.assign({},WithFirstAndLastOptions.parameters,{docs:Object.assign({},null==(_WithFirstAndLastOpti=WithFirstAndLastOptions.parameters)?void 0:_WithFirstAndLastOpti.docs,{source:Object.assign({originalSource:"{\n  args: {\n    count: 100,\n    showFirstButton: true,\n    showLastButton: true,\n    onPageChange: undefined,\n    onRowsPerPageChange: undefined\n  },\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        const [page, setPage] = useState(0)\n        const [pageSize, setPageSize] = useState(17)\n\n        const handleChangePage = useCallback((value) => {\n          setPage(value)\n        }, [])\n\n        const handleChangeRowsPerPage = useCallback((value) => {\n          setPageSize(value)\n          setPage(0)\n        }, [])\n\n        return (\n          <Pagination\n            count={100}\n            page={page}\n            onPageChange={handleChangePage}\n            pageSize={pageSize}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            showFirstButton={true}\n            showLastButton={true}\n          />\n        )\n        `,\n        format: true\n      }\n    }\n  },\n  render: () => <WithFirstAndLastPreview />\n}"},null==(_WithFirstAndLastOpti2=WithFirstAndLastOptions.parameters)||null==(_WithFirstAndLastOpti3=_WithFirstAndLastOpti2.docs)?void 0:_WithFirstAndLastOpti3.source),description:Object.assign({story:"You can optionally enable first-page and last-page buttons, or disable the previous-page and next-page buttons."},null==(_WithFirstAndLastOpti4=WithFirstAndLastOptions.parameters)||null==(_WithFirstAndLastOpti5=_WithFirstAndLastOpti4.docs)?void 0:_WithFirstAndLastOpti5.description)})});var __namedExportsOrder=["Default","WithFirstAndLastOptions"]}}]);